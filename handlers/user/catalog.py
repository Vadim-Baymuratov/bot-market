from aiogram.dispatcher import FSMContext

from filters import IsUser
from aiogram.types import Message, CallbackQuery
from keyboards.inline.categories import categories_markup, category_cb
from .cart import process_cart
from .menu import catalog
from loader import dp, db, bot
from aiogram.types.chat import ChatActions
from keyboards.inline.products_from_catalog import product_cb, product_markup


@dp.message_handler(IsUser(), text=catalog)
async def process_catalog(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª, —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:',
                         reply_markup=categories_markup())


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –≤—ã–≤–æ–¥—É –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@dp.callback_query_handler(IsUser(), category_cb.filter(action='view'))
async def category_callback_handler(query: CallbackQuery, callback_data: dict):
    products = db.fetchall('''SELECT * FROM products product
        WHERE product.tag = (SELECT title FROM categories WHERE idx=?) 
            AND product.idx NOT IN (SELECT idx FROM cart WHERE cid = ?)''',
                           (callback_data['id'], query.message.chat.id))

    await query.answer('–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã.')
    await show_products(query.message, products)

# –Ω–∏–∂–µ —Å–∞–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤.


async def show_products(m, products):

    if len(products) == 0:
        await m.answer('–ó–¥–µ—Å—å –Ω–∏—á–µ–≥–æ –Ω–µ—Ç üò¢')
    else:
        await bot.send_chat_action(m.chat.id, ChatActions.TYPING)
        #–í–∫–ª—é—á–∞–µ–º –∏–º–∏—Ç–∞—Ü–∏—é –ø–µ—á–∞—Ç–∏ —á–µ–ª–æ–≤–µ–∫–æ–º
        for idx, title, body, image, price, _ in products:
            #–î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –ø–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –æ–ø–∏—Å–∞–Ω–∏–µ, —Ñ–æ—Ç–æ, —Ü–µ–Ω—É
            markup = product_markup(idx, price)
            text = f'<b>{title}</b>\n\n{body}'

            #  –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É.
            await m.answer_photo(photo=image,
                                 caption=text,
                                 reply_markup=markup)
            #–í—ã–≤–æ–¥–∏–º –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä–∞ —Å —Ñ–æ—Ç–æ, –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.


@dp.callback_query_handler(IsUser(), product_cb.filter(action='add'))
async def add_product_callback_handler(query: CallbackQuery,
                                       callback_data: dict):
    db.query('INSERT INTO cart VALUES (?, ?, 1)',
             (query.message.chat.id, callback_data['id']))
    await query.answer('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!')
    await query.message.delete()

